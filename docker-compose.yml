services:
  # Redis 服務 - Celery broker 和 result backend
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - vibe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # 主應用程式
  vibe-code-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
      - BRAVE_API_KEY=${BRAVE_API_KEY}
      - API_KEY=${API_KEY:-}
      - ENABLE_RATE_LIMITING=${ENABLE_RATE_LIMITING:-true}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
      mcp-sqlite:
        condition: service_healthy
    networks:
      - vibe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Worker - 執行智能體任務
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["celery", "-A", "agent_tasks", "worker", "--loglevel=info", "--concurrency=4"]
    env_file:
      - .env
    environment:
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
      - BRAVE_API_KEY=${BRAVE_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - vibe-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "celery", "-A", "agent_tasks", "inspect", "ping"]
      interval: 60s
      timeout: 20s
      retries: 3
      start_period: 60s

  # Celery Beat - 定期任務調度器
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["celery", "-A", "agent_tasks", "beat", "--loglevel=info"]
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - vibe-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Celery Flower - 任務監控介面
  celery-flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["celery", "-A", "agent_tasks", "flower", "--port=5555"]
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - vibe-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  mcp-github:
    build:
      context: ./mcp-github
    environment:
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}
    ports:
      - "3001:3000"    # Main MCP service
      - "8081:8080"    # Health check endpoint
    networks:
      - vibe-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  mcp-brave-search:
    build:
      context: ./mcp-brave-search
    environment:
      - BRAVE_API_KEY=${BRAVE_API_KEY:-test-key}
    ports:
      - "3002:3000"    # Main MCP service
      - "8082:8080"    # Health check endpoint
    networks:
      - vibe-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  mcp-sqlite:
    build:
      context: .
      dockerfile: Dockerfile.mcp-sqlite
    ports:
      - "3003:3000"
    volumes:
      - sqlite-data:/data
    networks:
      - vibe-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

volumes:
  sqlite-data:
  redis-data:

networks:
  vibe-network:
    driver: bridge
